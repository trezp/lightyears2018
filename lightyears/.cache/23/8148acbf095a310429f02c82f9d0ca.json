{"id":"Deck/Player.js","dependencies":[{"name":"/Users/treasureporth/Coding/lightyears/lightyears/package.json","includedInParent":true,"mtime":1556852729914},{"name":"unique-string","loc":{"line":2,"column":25},"parent":"/Users/treasureporth/Coding/lightyears/lightyears/Deck/Player.js","resolved":"/Users/treasureporth/Coding/lightyears/lightyears/node_modules/unique-string/index.js"}],"generated":{"js":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar uniqueID = require('unique-string');\n\nvar Player =\n/*#__PURE__*/\nfunction () {\n  function Player(name) {\n    _classCallCheck(this, Player);\n\n    this.playerID = uniqueID(), this.name = name || \"Player\" + this.playerID;\n    this.score = 0, this.isTurn = false, this.hand = [];\n  }\n\n  _createClass(Player, [{\n    key: \"makePlayer\",\n    value: function makePlayer(name) {\n      var player = new Player(name);\n      return player;\n    }\n  }, {\n    key: \"updateScore\",\n    value: function updateScore(score) {\n      this.score = score;\n    }\n  }]);\n\n  return Player;\n}();\n\nmodule.exports = new Player().makePlayer(\"Player One\");"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"Deck/Player.js","original":{"line":2,"column":0}},{"name":"uniqueID","generated":{"line":7,"column":4},"source":"Deck/Player.js","original":{"line":2,"column":6}},{"generated":{"line":7,"column":12},"source":"Deck/Player.js","original":{"line":2,"column":14}},{"name":"require","generated":{"line":7,"column":15},"source":"Deck/Player.js","original":{"line":2,"column":17}},{"generated":{"line":7,"column":22},"source":"Deck/Player.js","original":{"line":2,"column":24}},{"generated":{"line":7,"column":23},"source":"Deck/Player.js","original":{"line":2,"column":25}},{"generated":{"line":7,"column":38},"source":"Deck/Player.js","original":{"line":2,"column":24}},{"generated":{"line":7,"column":39},"source":"Deck/Player.js","original":{"line":2,"column":0}},{"name":"Player","generated":{"line":9,"column":4},"source":"Deck/Player.js","original":{"line":4,"column":6}},{"generated":{"line":12,"column":0},"source":"Deck/Player.js","original":{"line":5,"column":2}},{"name":"name","generated":{"line":12,"column":18},"source":"Deck/Player.js","original":{"line":5,"column":14}},{"generated":{"line":12,"column":22},"source":"Deck/Player.js","original":{"line":5,"column":2}},{"generated":{"line":12,"column":24},"source":"Deck/Player.js","original":{"line":5,"column":20}},{"generated":{"line":13,"column":0},"source":"Deck/Player.js","original":{"line":5,"column":20}},{"generated":{"line":15,"column":0},"source":"Deck/Player.js","original":{"line":6,"column":4}},{"name":"playerID","generated":{"line":15,"column":9},"source":"Deck/Player.js","original":{"line":6,"column":9}},{"generated":{"line":15,"column":17},"source":"Deck/Player.js","original":{"line":6,"column":4}},{"name":"uniqueID","generated":{"line":15,"column":20},"source":"Deck/Player.js","original":{"line":6,"column":20}},{"generated":{"line":15,"column":28},"source":"Deck/Player.js","original":{"line":6,"column":28}},{"generated":{"line":15,"column":30},"source":"Deck/Player.js","original":{"line":6,"column":4}},{"generated":{"line":15,"column":32},"source":"Deck/Player.js","original":{"line":7,"column":4}},{"name":"name","generated":{"line":15,"column":37},"source":"Deck/Player.js","original":{"line":7,"column":9}},{"generated":{"line":15,"column":41},"source":"Deck/Player.js","original":{"line":7,"column":4}},{"name":"name","generated":{"line":15,"column":44},"source":"Deck/Player.js","original":{"line":7,"column":16}},{"generated":{"line":15,"column":48},"source":"Deck/Player.js","original":{"line":7,"column":20}},{"generated":{"line":15,"column":52},"source":"Deck/Player.js","original":{"line":7,"column":24}},{"generated":{"line":15,"column":63},"source":"Deck/Player.js","original":{"line":7,"column":35}},{"name":"playerID","generated":{"line":15,"column":68},"source":"Deck/Player.js","original":{"line":7,"column":40}},{"generated":{"line":15,"column":76},"source":"Deck/Player.js","original":{"line":6,"column":4}},{"generated":{"line":16,"column":0},"source":"Deck/Player.js","original":{"line":8,"column":4}},{"name":"score","generated":{"line":16,"column":9},"source":"Deck/Player.js","original":{"line":8,"column":9}},{"generated":{"line":16,"column":14},"source":"Deck/Player.js","original":{"line":8,"column":4}},{"generated":{"line":16,"column":17},"source":"Deck/Player.js","original":{"line":8,"column":17}},{"generated":{"line":16,"column":18},"source":"Deck/Player.js","original":{"line":8,"column":4}},{"generated":{"line":16,"column":20},"source":"Deck/Player.js","original":{"line":9,"column":4}},{"name":"isTurn","generated":{"line":16,"column":25},"source":"Deck/Player.js","original":{"line":9,"column":9}},{"generated":{"line":16,"column":31},"source":"Deck/Player.js","original":{"line":9,"column":4}},{"generated":{"line":16,"column":34},"source":"Deck/Player.js","original":{"line":9,"column":18}},{"generated":{"line":16,"column":39},"source":"Deck/Player.js","original":{"line":8,"column":4}},{"generated":{"line":16,"column":41},"source":"Deck/Player.js","original":{"line":10,"column":4}},{"name":"hand","generated":{"line":16,"column":46},"source":"Deck/Player.js","original":{"line":10,"column":9}},{"generated":{"line":16,"column":50},"source":"Deck/Player.js","original":{"line":10,"column":4}},{"generated":{"line":16,"column":53},"source":"Deck/Player.js","original":{"line":10,"column":16}},{"generated":{"line":16,"column":55},"source":"Deck/Player.js","original":{"line":8,"column":4}},{"generated":{"line":17,"column":0},"source":"Deck/Player.js","original":{"line":11,"column":3}},{"name":"name","generated":{"line":21,"column":31},"source":"Deck/Player.js","original":{"line":13,"column":13}},{"generated":{"line":21,"column":37},"source":"Deck/Player.js","original":{"line":13,"column":18}},{"generated":{"line":22,"column":0},"source":"Deck/Player.js","original":{"line":14,"column":4}},{"name":"player","generated":{"line":22,"column":10},"source":"Deck/Player.js","original":{"line":14,"column":10}},{"generated":{"line":22,"column":16},"source":"Deck/Player.js","original":{"line":14,"column":16}},{"generated":{"line":22,"column":19},"source":"Deck/Player.js","original":{"line":14,"column":19}},{"name":"Player","generated":{"line":22,"column":23},"source":"Deck/Player.js","original":{"line":14,"column":23}},{"generated":{"line":22,"column":29},"source":"Deck/Player.js","original":{"line":14,"column":19}},{"name":"name","generated":{"line":22,"column":30},"source":"Deck/Player.js","original":{"line":14,"column":30}},{"generated":{"line":22,"column":34},"source":"Deck/Player.js","original":{"line":14,"column":19}},{"generated":{"line":22,"column":35},"source":"Deck/Player.js","original":{"line":14,"column":4}},{"generated":{"line":23,"column":0},"source":"Deck/Player.js","original":{"line":15,"column":4}},{"name":"player","generated":{"line":23,"column":13},"source":"Deck/Player.js","original":{"line":15,"column":11}},{"generated":{"line":23,"column":19},"source":"Deck/Player.js","original":{"line":15,"column":4}},{"generated":{"line":24,"column":0},"source":"Deck/Player.js","original":{"line":16,"column":3}},{"name":"score","generated":{"line":27,"column":32},"source":"Deck/Player.js","original":{"line":18,"column":14}},{"generated":{"line":27,"column":39},"source":"Deck/Player.js","original":{"line":18,"column":20}},{"generated":{"line":28,"column":0},"source":"Deck/Player.js","original":{"line":19,"column":4}},{"name":"score","generated":{"line":28,"column":11},"source":"Deck/Player.js","original":{"line":19,"column":9}},{"generated":{"line":28,"column":16},"source":"Deck/Player.js","original":{"line":19,"column":4}},{"name":"score","generated":{"line":28,"column":19},"source":"Deck/Player.js","original":{"line":19,"column":17}},{"generated":{"line":28,"column":24},"source":"Deck/Player.js","original":{"line":19,"column":4}},{"generated":{"line":29,"column":0},"source":"Deck/Player.js","original":{"line":20,"column":3}},{"name":"module","generated":{"line":35,"column":0},"source":"Deck/Player.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":6},"source":"Deck/Player.js","original":{"line":23,"column":6}},{"name":"exports","generated":{"line":35,"column":7},"source":"Deck/Player.js","original":{"line":23,"column":7}},{"generated":{"line":35,"column":14},"source":"Deck/Player.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":17},"source":"Deck/Player.js","original":{"line":23,"column":17}},{"name":"Player","generated":{"line":35,"column":21},"source":"Deck/Player.js","original":{"line":23,"column":21}},{"generated":{"line":35,"column":27},"source":"Deck/Player.js","original":{"line":23,"column":17}},{"name":"makePlayer","generated":{"line":35,"column":30},"source":"Deck/Player.js","original":{"line":23,"column":30}},{"generated":{"line":35,"column":40},"source":"Deck/Player.js","original":{"line":23,"column":17}},{"generated":{"line":35,"column":41},"source":"Deck/Player.js","original":{"line":23,"column":41}},{"generated":{"line":35,"column":53},"source":"Deck/Player.js","original":{"line":23,"column":17}},{"generated":{"line":35,"column":54},"source":"Deck/Player.js","original":{"line":23,"column":0}}],"sources":{"Deck/Player.js":"\nconst uniqueID = require('unique-string');\n\nclass Player {\n  constructor(name) {\n    this.playerID = uniqueID(),\n    this.name = name || \"Player\" + this.playerID; \n    this.score = 0,\n    this.isTurn = false,\n    this.hand = [];\n  }\n\n  makePlayer(name){\n    const player = new Player(name);\n    return player\n  }\n\n  updateScore(score){\n    this.score = score;\n  }\n}\n\nmodule.exports = new Player().makePlayer(\"Player One\");"},"lineCount":null}},"error":null,"hash":"804ac9a7f2878ad008bae69be98aee41","cacheData":{"env":{}}}